<resources>

    <style name="AppBaseTheme" parent="Theme.AppCompat.Light.NoActionBar">
        <!-- 因为要使用Toolbar，所以需要隐藏ActionBar。有两种方法隐藏ActionBar，一种是parent继承xxx.NoActionBar，
        另一种是，添加windowNoTitle为true的item。在API22以下时，windowNoTitle前需要加上`android:`修饰。-->
        <!--<item name="windowNoTitle">true</item>-->

        <!-- ActionBar color，默认对Toolbar不起作用，Toolbar背景色需要在Toolbar的layout中引用?attr指定 -->
        <item name="colorPrimary">@color/colorPrimary</item>

        <!-- Status bar color -->
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>

        <!-- 各控制元件(如：check box、switch 或是 radoi) 被勾选 (checked) 或是选定 (selected) 的颜色。 -->
        <!--<item name="colorAccent">@color/colorAccent</item>-->

        <!-- 各控制元件的预设颜色。 -->
        <!--<item name="colorControlNormal">@color/colorAccent</item>-->

        <!--Window color-->
        <item name="android:windowBackground">@color/windowBackgroundColor</item>

        <!-- title and menu text color -->
        <item name="android:textColorPrimary">#0000ff</item>

        <!-- subTitle and menu color -->
        <item name="android:textColorSecondary">#3598c1</item>
    </style>

    <style name="AppTheme" parent="AppBaseTheme">
    </style>
    
    <style name="ToolbarPopTheme" parent="ThemeOverlay.AppCompat.Light">
        <!-- Toolbar popWindow background color -->
        <item name="android:colorBackground">#5ca13b</item>
        <!-- Toolbar popWindow textColor -->
        <item name="android:textColor">#0000FF</item>
        <item name="actionOverflowMenuStyle">@style/OverflowMenuStyle</item> <!--新增一个item，用于控制menu-->
    </style>

    <style name="OverflowMenuStyle" parent="Widget.AppCompat.Light.PopupMenu.Overflow">
        <!-- 把该属性改为false即可使menu位置位于toolbar之下 -->
        <item name="overlapAnchor">false</item>
    </style>

</resources>
